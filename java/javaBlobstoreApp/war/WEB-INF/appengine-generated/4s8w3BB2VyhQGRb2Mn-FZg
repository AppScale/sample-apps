#!/usr/bin/env python

""" View all application entities. """ 

import os
import sys
import time

from dbconstants import *
import appscale_datastore_batch

_MAX_ENTITIES = 10000

def get_entities(table, schema, db, start_key="", end_key="", start_inclusive=True):
  """ Gets entities from a table.
    
  Args:
    table: Name of the table
    schema: The schema of table to get from
    db: The database accessor
  Returns: 
    The entire table up to _MAX_ENTITIES.
  """
  print "Fetching: {} - {}".format(start_key, end_key)
  return db.range_query(table, schema, start_key, end_key, _MAX_ENTITIES, start_inclusive=start_inclusive, end_inclusive=True)

def view_all(entities, table, db):
  """ View all entities for a table.
  
  Args:
    entities: All entities in a list.
    table: The table these entities are from.
    db: Database accessor.
  """
  for ii in entities:
    print ii

def main(argv):
  """ Main function for viewing data entities. """

  DB_TYPE="cassandra"
  
  if len(argv) < 2:
    print "Usage: ./view_all_records.py [app_ID]"
  else:
    app_id = argv[1]
  
  db = appscale_datastore_batch.DatastoreFactory.getDatastore(DB_TYPE)

  if app_id:
    start_key = app_id
    end_key = app_id + TERMINATING_STRING
  else:
    start_key = ""
    end_key = ""

  start_inclusive = True
  print 
  print "TABLE:", APP_ENTITY_TABLE
  while True:
    for retry in range(0, 5):
      try:
        entities = get_entities(APP_ENTITY_TABLE, APP_ENTITY_SCHEMA, db, start_key=start_key, end_key=end_key, start_inclusive=start_inclusive)
#      view_all(entities, APP_ENTITY_TABLE, db)
        break
#      except MaximumRetryException:
#        print "DB timeout. Backing off..."
#        time.sleep(1)
      except AppScaleDBConnectionError:
        print "AppScaleDBConnectionError. Retrying..."

    if len(entities) < _MAX_ENTITIES:
      break

    start_key = entities[-1].keys()[0]
    start_inclusive = False
    print "--------------------------------- Retrieved 100000 entities ------------------------------------"
  print


#  entities = get_entities(ASC_PROPERTY_TABLE, PROPERTY_SCHEMA, db)
#  view_all(entities, ASC_PROPERTY_TABLE, db) 

#  entities = get_entities(DSC_PROPERTY_TABLE, PROPERTY_SCHEMA, db)
#  view_all(entities, DSC_PROPERTY_TABLE, db) 

#  entities = get_entities(APP_KIND_TABLE, APP_KIND_SCHEMA, db)
#  view_all(entities, APP_KIND_TABLE, db) 

#  entities = get_entities(JOURNAL_TABLE, JOURNAL_SCHEMA, db)
#  view_all(entities, JOURNAL_TABLE, db) 

#  entities = get_entities(COMPOSITE_TABLE, COMPOSITE_SCHEMA, db)
#  view_all(entities, COMPOSITE_TABLE, db) 
   
#  entities = get_entities(METADATA_TABLE, METADATA_SCHEMA, db)
#  view_all(entities, METADATA_TABLE, db)

if __name__ == "__main__":
  main(sys.argv)

